apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-config
  namespace: backstage
  labels:
    app: backstage
    app.kubernetes.io/name: backstage
    app.kubernetes.io/part-of: idp
data:
  app-config.yaml: |
    app:
      title: Internal Developer Platform
      baseUrl: http://localhost:3000
      support:
        url: https://github.com/your-org/idp-support
        items:
          - title: Issues
            icon: github
            links:
              - url: https://github.com/your-org/idp-support/issues
                title: GitHub Issues

    organization:
      name: Your Organization

    backend:
      baseUrl: http://localhost:7007
      listen:
        port: 7007
        host: 0.0.0.0
      cors:
        origin: http://localhost:3000
        methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
        credentials: true
      database:
        client: pg
        connection:
          host: ${POSTGRES_HOST}
          port: ${POSTGRES_PORT}
          user: ${POSTGRES_USER}
          password: ${POSTGRES_PASSWORD}
          database: backstage_plugin_catalog

    integrations:
      github:
        - host: github.com
          token: ${GITHUB_TOKEN}

    proxy:
      '/crossplane':
        target: 'http://crossplane-server.crossplane-system:8080'
        pathRewrite:
          '^/api/proxy/crossplane': ''
      '/grafana/api':
        target: '${GRAFANA_CLOUD_URL}'
        headers:
          Authorization: 'Bearer ${GRAFANA_CLOUD_API_KEY}'
        changeOrigin: true

    scaffolder:
      defaultAuthor:
        name: Platform Team
        email: platform@your-org.com
      defaultCommitMessage: 'Initial commit from Backstage template'

    catalog:
      import:
        entityFilename: catalog-info.yaml
        pullRequestBranchName: backstage-integration
      rules:
        - allow: [Component, System, API, Resource, Location]
      locations:
        - type: file
          target: ../../templates/*/template.yaml
        - type: file
          target: ../../catalog-entities/**/catalog-info.yaml

    auth:
      providers:
        guest:
          dangerouslyAllowOutsideDevelopment: true

    kubernetes:
      serviceLocatorMethod:
        type: 'multiTenant'
      clusterLocatorMethods:
        - type: 'config'
          clusters:
            - url: ${KUBERNETES_API_URL}
              name: local
              authProvider: 'serviceAccount'
              serviceAccountToken: ${KUBERNETES_SERVICE_ACCOUNT_TOKEN}

    techdocs:
      builder: 'local'
      generator:
        runIn: 'local'
      publisher:
        type: 'local'